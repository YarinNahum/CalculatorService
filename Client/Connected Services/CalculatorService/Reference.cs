//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.CalculatorService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalculatorService.IWCFCalculator", CallbackContract=typeof(Client.CalculatorService.IWCFCalculatorCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IWCFCalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFCalculator/InitializeConnection", ReplyAction="http://tempuri.org/IWCFCalculator/InitializeConnectionResponse")]
        void InitializeConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFCalculator/InitializeConnection", ReplyAction="http://tempuri.org/IWCFCalculator/InitializeConnectionResponse")]
        System.Threading.Tasks.Task InitializeConnectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWCFCalculator/ProcessRequest")]
        void ProcessRequest(string[] request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWCFCalculator/ProcessRequest")]
        System.Threading.Tasks.Task ProcessRequestAsync(string[] request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFCalculatorCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWCFCalculator/PrintMessage")]
        void PrintMessage(string error);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFCalculatorChannel : Client.CalculatorService.IWCFCalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFCalculatorClient : System.ServiceModel.DuplexClientBase<Client.CalculatorService.IWCFCalculator>, Client.CalculatorService.IWCFCalculator {
        
        public WCFCalculatorClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public WCFCalculatorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public WCFCalculatorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WCFCalculatorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WCFCalculatorClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void InitializeConnection() {
            base.Channel.InitializeConnection();
        }
        
        public System.Threading.Tasks.Task InitializeConnectionAsync() {
            return base.Channel.InitializeConnectionAsync();
        }
        
        public void ProcessRequest(string[] request) {
            base.Channel.ProcessRequest(request);
        }
        
        public System.Threading.Tasks.Task ProcessRequestAsync(string[] request) {
            return base.Channel.ProcessRequestAsync(request);
        }
    }
}
